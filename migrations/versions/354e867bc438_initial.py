"""initial

Revision ID: 354e867bc438
Revises:
Create Date: 2025-09-18 17:29:39.323816

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "354e867bc438"
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "class",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "grade",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "school",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "homework",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("subject", sa.String(), nullable=False),
        sa.Column("delivery_date", sa.Date(), nullable=False),
        sa.Column("content", sa.String(), nullable=False),
        sa.Column("user_id", sa.String(), nullable=False),
        sa.Column("gpt_reasoning", sa.String(), nullable=True),
        sa.Column(
            "gpt_status",
            sa.Enum("APPROVED", "REJECTED", name="gptstatus"),
            nullable=False,
        ),
        sa.Column("created_date", sa.DateTime(), nullable=False),
        sa.Column("updated_date", sa.DateTime(), nullable=False),
        sa.Column("school_id", sa.Integer(), nullable=False),
        sa.Column("grade_id", sa.Integer(), nullable=False),
        sa.Column("class_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["class_id"],
            ["class.id"],
        ),
        sa.ForeignKeyConstraint(
            ["grade_id"],
            ["grade.id"],
        ),
        sa.ForeignKeyConstraint(
            ["school_id"],
            ["school.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_homework_delivery_date"), "homework", ["delivery_date"], unique=False
    )
    op.create_table(
        "false_report",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.String(), nullable=False),
        sa.Column("homework_id", sa.Integer(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["homework_id"],
            ["homework.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("homework_id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("false_report")
    op.drop_index(op.f("ix_homework_delivery_date"), table_name="homework")
    op.drop_table("homework")
    op.drop_table("school")
    op.drop_table("grade")
    op.drop_table("class")
    # ### end Alembic commands ###
